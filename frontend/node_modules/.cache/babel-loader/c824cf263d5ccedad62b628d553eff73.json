{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\freelance\\\\Giftoria\\\\giftoriaWeb\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getCurrentUser, login as apiLogin, logout as apiLogout, register as apiRegister } from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        // Try to get user from localStorage first\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n          setUser(JSON.parse(storedUser));\n          setLoading(false);\n          return;\n        }\n        // If not in localStorage, fetch from API\n        const currentUser = await getCurrentUser();\n        setUser(currentUser);\n        localStorage.setItem('user', JSON.stringify(currentUser));\n      } catch (error) {\n        setUser(null);\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async credentials => {\n    try {\n      const data = await apiLogin(credentials);\n      setUser(data.user);\n      localStorage.setItem('user', JSON.stringify(data.user));\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await apiLogout();\n      setUser(null);\n      localStorage.removeItem('user');\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const data = await apiRegister(userData);\n      setUser(data.user);\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getCurrentUser","login","apiLogin","logout","apiLogout","register","apiRegister","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUser","storedUser","localStorage","getItem","JSON","parse","currentUser","setItem","stringify","error","removeItem","credentials","data","userData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/freelance/Giftoria/giftoriaWeb/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { getCurrentUser, login as apiLogin, logout as apiLogout, register as apiRegister } from '../api/auth';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            try {\n                // Try to get user from localStorage first\n                const storedUser = localStorage.getItem('user');\n                if (storedUser) {\n                    setUser(JSON.parse(storedUser));\n                    setLoading(false);\n                    return;\n                }\n                // If not in localStorage, fetch from API\n                const currentUser = await getCurrentUser();\n                setUser(currentUser);\n                localStorage.setItem('user', JSON.stringify(currentUser));\n            } catch (error) {\n                setUser(null);\n                localStorage.removeItem('user');\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchUser();\n    }, []);\n\n    const login = async (credentials) => {\n        try {\n            const data = await apiLogin(credentials);\n            setUser(data.user);\n            localStorage.setItem('user', JSON.stringify(data.user));\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await apiLogout();\n            setUser(null);\n            localStorage.removeItem('user');\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    const register = async (userData) => {\n        try {\n            const data = await apiRegister(userData);\n            setUser(data.user);\n            return data;\n        } catch (error) {\n            throw error;\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, setUser, loading, login, logout, register }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}